# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
# report: "report/workflow.rst"

# Allow users to fix the underlying OS via singularity.
from snakemake.utils import validate
import pandas as pd
import numpy as np
import os
import datetime
configfile:"config/config.yaml"

metadata = pd.read_csv(config['samples'], sep="\t")
validate(metadata, schema="schemas/samples.schema.yaml")
samples = metadata.samples

# IR allele balance mutations file
mutationData = pd.read_csv(config['IRmutations']['path'], sep="\t") if config['IRmutations']['activate'] else []

include: "rules/common.smk"
welcome(version="v0.4.0")
include: "rules/qc.smk"
include: "rules/diff.smk"
include: "rules/variantCalling.smk"
include: "rules/variantAnalysis.smk"

rule all:
    input:
        # The first rule should define the default target files
        # The below function (defined in rules/common.smk) will read the config file and determine desired output files
        get_desired_outputs

## This rule produces a table with all the desired contrasts between treatment groups. If the config file is updated, it will re-run the analysis (because new contrasts may have been added)
## To update the config file, but not re-run already completed rules, use the --touch directive at the command line, to update the timestamps of created files 
rule DElist:
    output:
        DElist = "resources/DE.contrast.list"
    params:
        contrasts = config['contrasts']
    log: 
        "logs/DElist.log"
    run:
        df = pd.DataFrame(params.contrasts)
        df.columns = ['contrast']
        df.to_csv(output.DElist, sep="\t", index=None)
