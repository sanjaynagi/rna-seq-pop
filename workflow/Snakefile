# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
# report: "report/workflow.rst"

# Allow users to fix the underlying OS via singularity.
from snakemake.utils import validate
import pandas as pd
import numpy as np
import os
import datetime


configfile: "config/config.yaml"

metadata = pd.read_csv(config["metadata"], sep="\t")
validate(metadata, schema="schemas/samples.schema.yaml")
samples = metadata['sampleID']

# AlleleBalance mutations file
if config['miscellaneous']["VariantsOfInterest"]["activate"]:
    mutationData = pd.read_csv(config['miscellaneous']["VariantsOfInterest"]["path"], sep="\t")[:16] 
else:
    mutationData = pd.DataFrame({"Name": ["KDR"], "mut":["995F"], "Location": ["2L-28xxxxx"]})   # ignore this, just an dummy df for snakemake

include: "rules/common.smk"
welcome(version="v0.7.0")
include: "rules/qc.smk"
include: "rules/diff.smk"
include: "rules/variantsOfInterest.smk"
include: "rules/variantCalling.smk"
include: "rules/variantAnalysis.smk"
include: "rules/misc.smk"


rule all:
    input:
        # The below function (defined in rules/common.smk) will read the config file and determine desired output files
        GetDesiredOutputs,
